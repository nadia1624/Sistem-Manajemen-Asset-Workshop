<%- include("../../layout/sidebar.ejs") %>
<style>
    /* Container untuk input dan kamera dengan ukuran seragam */
    .preview-container {
    display: flex;
    justify-content: center;
    align-items: center;
    margin-top: 10px;
  }

  .preview-container img,
  .preview-container video,
  .preview-container canvas {
    width: 100%;
    max-width: 350px; /* Pastikan ukuran tetap sama */
    height: auto;
    border-radius: 5px;
  }
  
  #cameraPreview {
    transform: scaleX(-1);
}
  
</style>
<main class="content">
    <div class="header-content">
      <h3 style="font-weight: bold;">Penyerahan Aset</h3>
      <div class="search-bar" style="margin-right: 30px;">
        <input id="search-input" placeholder="Search..." type="text" onkeyup="filterTable()"/>
        <i class="fas fa-search"></i>
     </div>
    </div>
    <div class="container-fluid px-4">
      <div class="table-wrapper">
        <div class="table-responsive">
          <div class="table-bungkus">
            <div class="table-scroll">
              <table class="table-compact">
                <thead>
                  <tr>
                    <th width="5%">No</th>
                    <th width="13%">Nama</th>
                    <th width="13%">Unit Kerja</th>
                    <th width="14%">Nama Aset</th>
                    <th width="13%">Nama Penerima</th>
                    <th width="15%">Bukti Penyerahan</th>
                    <th width="15%">Status</th>
                    <th width="10%">Aksi</th>
                  </tr>
                </thead>
                <tbody>
                  <% if (listPenyerahan.length > 0) { %>
                    <% listPenyerahan.forEach((penyerahan, index) => { %>
                      <tr>
                        <td width="5%"><%= index + 1 %></td>
                        <td width="13%"><%= penyerahan.Permintaan.User.nama %></td>
                        <td width="13%"><%= penyerahan.Permintaan.User.unit_kerja %></td>
                        <td width="14%"><%= penyerahan.Permintaan.Aset.nama_barang %></td>
                        <td width="13%">
                          <% if (penyerahan.penerima) { %>
                            <%= penyerahan.penerima %>
                          <% } else { %>
                            -
                          <% } %>
                        </td>
                        <td width="15%">
                          <% if (penyerahan.gambar_bukti) { %>
                            <img class="img-fluid" alt="Bukti Penyerahan" src="/public/uploads/<%= penyerahan.gambar_bukti %>" />
                          <% } else { %>
                            <span>-</span>
                          <% } %>
                        </td>
                        <td width="17%">
                          <% if (penyerahan.status_penyerahan === "belum diserahkan") { %>
                            <span class="custom-span" style="background-color: #dd5f61; font: black;">Belum Diserahkan</span>
                          <% } else if (penyerahan.status_penyerahan === "sudah diserahkan") { %>
                            <span class="custom-span" style="background-color: #A2E180; font: black;">Telah Diserahkan</span>
                          <% } %>
                        </td>
                        <td width="10%">
                          <% if (penyerahan.status_penyerahan === "belum diserahkan") { %>
                            <button class="btn btn-setuju" 
                            style="background-color: #28a745; color: white;" 
                            onclick="showModal('<%= penyerahan.id %>', '<%= penyerahan.Permintaan.Aset.nama_barang %>', '<%= penyerahan.Permintaan.User.nama %>', '<%= penyerahan.Permintaan.User.unit_kerja %>')">
                      <i class="fas fa-check"></i>
                    </button>
                          <% } else if (penyerahan.status_penyerahan === "sudah diserahkan" && penyerahan.surat) { %>
                              <a href="/data/surat/<%= penyerahan.surat %>" target="_blank" 
                                 class="btn btn-action" 
                                 style="background-color: #ffffff; padding: 6px 10px; font-size: 25px; border: 2px solid #000; padding-right: 6px; border-radius: 8px; color: #000; cursor: pointer; display: inline-flex; align-items: center; justify-content: center; height: auto;">
                                  <i class="fa-solid fa-download" style="font-size: 15px;"></i>
                              </a>
                          <% } %>
                      </td>                      
                      </tr>
                    <% }); %>
                  <% } else { %>
                    <tr>
                      <td colspan="8" class="text-center">Tidak ada data penyerahan.</td>
                    </tr>
                  <% } %>
                </tbody>                
            </table>
            <div id="no-data-message"id="no-data-message" class="no-data-message">
                Data tidak ditemukan.
            </div>          
          </div>
        </div>
      </div>
    </div>
  </div>
</main>

<!-- Modal -->
<div id="addModal" class="popup-modal">
  <div class="modal-content" style="max-height: 80vh; min-width: 425px; overflow-y: auto; scrollbar-width: none; -ms-overflow-style: none;">
    <span id="close" class="close-btn">&times;</span>
    <h3 id="modalTitle">Konfirmasi Penyerahan Aset</h3>
    <form id="penyerahanForm" enctype="multipart/form-data">
      <label for="namaKaryawan" class="left-label">Nama Peminjam</label>
      <input type="text" id="namaKaryawan" name="namaKaryawan" value="" readonly required />

      <label for="unitKerja" class="left-label">Unit Kerja</label>
      <input type="text" id="unitKerja" name="unitKerja" value="" readonly required />

      <label for="namaAset" class="left-label">Nama Aset</label>
      <input type="text" id="namaAset" name="namaAset" value="" readonly required />

      <label class="left-label">Penerima Aset:</label>
      <div class="radio-group">
        <label>
          <input type="radio" id="penerimaKaryawan" name="jenisPenerima" value="karyawan" checked />
          Yang bersangkutan
        </label>
        <label>
          <input type="radio" id="penerimaLain" name="jenisPenerima" value="lain" />
          Diwakilkan
        </label>
      </div>

      <div id="perwakilanInput" style="display: none;">
        <label for="namaPenerima" class="left-label">Nama Perwakilan:</label>
        <input type="text" id="namaPenerima" name="namaPenerima" placeholder="Nama perwakilan"/>
      </div>

      <label class="left-label">Bukti Penyerahan:</label>
      <div class="radio-group">
        <label>
          <input type="radio" id="uploadFile" name="jenisBukti" value="upload" checked />
          Upload File
        </label>
        <label>
          <input type="radio" id="gunakanKamera" name="jenisBukti" value="kamera" />
          Gunakan Kamera
        </label>
      </div>

<!-- Upload File Container -->
<div id="uploadContainer">
  <input type="file" id="gambarBukti" name="gambar_bukti" class="form-control" accept="image/*" onchange="previewImage(event)" />
  <div id="filePreviewContainer" class="preview-container" style="display: none;">
    <img id="filePreview" src="" alt="Preview Gambar" />
  </div>
</div>

<!-- Kamera Container -->
<div id="kameraContainer" style="display: none;">
  <div class="preview-container">
    <video id="cameraPreview" autoplay playsinline></video>
    <canvas id="capturedCanvas" style="display: none;"></canvas>
  </div>
  <button type="button" id="capturePhoto" class="btn btn-capture" style="  background-color: #4CAF50; color: white;
  border-radius: 4px;
  cursor: pointer;">
    <i class="fas fa-camera"></i> Ambil Foto
  </button>
  <button type="button" id="retakePhoto" class="btn btn-retake" style="display: none;     background-color: #f44336;
  color: white;
  border-radius: 4px;
  cursor: pointer;">
    <i class="fas fa-redo"></i> Ambil Ulang
  </button>
  <div id="cameraPreviewContainer" class="preview-container" style="display: none;">
    <img id="cameraPreviewImage" src="" alt="Preview Gambar Kamera" />
  </div>
</div>

      <div class="flex justify-center space-x-4">
        <button type="button" class="btn cancel-btn">Tidak</button>
        <button type="submit" class="btn finish-btn">Ya</button>
      </div>
    </form>
  </div>

  <!-- Loading spinner -->
  <div id="loading" class="loading-container" style="display: none;">
    <div class="spinner"></div>
  </div>
</div>

<script>
 let stream = null;
let capturedBlob = null;

const modal = document.getElementById("addModal");
const closeBtn = document.getElementById("close");
const cancelBtn = document.querySelector(".cancel-btn");
const penyerahanForm = document.getElementById("penyerahanForm");
const penerimaKaryawan = document.getElementById("penerimaKaryawan");
const penerimaLain = document.getElementById("penerimaLain");
const perwakilanInput = document.getElementById("perwakilanInput");
const namaPenerimaInput = document.getElementById("namaPenerima");
const uploadFileOption = document.getElementById("uploadFile");
const gunakanKameraOption = document.getElementById("gunakanKamera");
const uploadContainer = document.getElementById("uploadContainer");
const kameraContainer = document.getElementById("kameraContainer");
const video = document.getElementById("cameraPreview");
const captureBtn = document.getElementById("capturePhoto");
const retakeBtn = document.getElementById("retakePhoto");
const canvas = document.getElementById("capturedCanvas");
const filePreviewContainer = document.getElementById("filePreviewContainer");
const filePreview = document.getElementById("filePreview");
const cameraPreviewContainer = document.getElementById("cameraPreviewContainer");
const cameraPreviewImage = document.getElementById("cameraPreviewImage");

// Fungsi untuk membuka kamera
async function openCamera() {
  try {
    stream = await navigator.mediaDevices.getUserMedia({
      video: {
        facingMode: 'environment',
        width: { ideal: 1280 },
        height: { ideal: 720 }
      }
    });
    video.srcObject = stream;
    video.style.display = "block";
    captureBtn.style.display = "block";
    retakeBtn.style.display = "none";
    cameraPreviewContainer.style.display = "none";
  } catch (error) {
    console.error("Error accessing camera:", error);
    alert("Gagal mengakses kamera: " + error.message);
  }
}

// Fungsi untuk menghentikan kamera
function stopCamera() {
  if (stream) {
    stream.getTracks().forEach(track => track.stop());
    stream = null;
  }
  video.srcObject = null;
}

// Toggle antara upload file dan kamera
function toggleBuktiPenyerahan() {
  stopCamera();
  
  if (uploadFileOption.checked) {
    uploadContainer.style.display = "block";
    kameraContainer.style.display = "none";
    filePreviewContainer.style.display = "none";
    cameraPreviewContainer.style.display = "none";
    capturedBlob = null;
  } else if (gunakanKameraOption.checked) {
    uploadContainer.style.display = "none";
    kameraContainer.style.display = "block";
    openCamera();
    // Reset file input
    const fileInput = document.getElementById("gambarBukti");
    if (fileInput) fileInput.value = "";
  }
}

// Event handler untuk capture foto
captureBtn.addEventListener("click", () => {
  const context = canvas.getContext("2d");
  canvas.width = video.videoWidth;
  canvas.height = video.videoHeight;
  context.drawImage(video, 0, 0, canvas.width, canvas.height);
  
    // Membalik gambar horizontal agar hasilnya tidak cermin
    context.translate(canvas.width, 0);
    context.scale(-1, 1);
    context.drawImage(video, 0, 0, canvas.width, canvas.height);

  canvas.toBlob((blob) => {
    capturedBlob = blob;
    const imageUrl = URL.createObjectURL(blob);
    cameraPreviewImage.src = imageUrl;
    cameraPreviewContainer.style.display = "block";
    
    stopCamera();
    video.style.display = "none";
    captureBtn.style.display = "none";
    retakeBtn.style.display = "block";
  }, "image/jpeg", 0.8);
});

// Event handler untuk mengambil ulang foto
retakeBtn.addEventListener("click", () => {
  capturedBlob = null;
  cameraPreviewContainer.style.display = "none";
  openCamera();
});

// Fungsi preview image yang diperbaiki
function previewImage(event) {
    const file = event.target.files[0];
    if (file) {
        if (file.type.startsWith('image/')) {
            const reader = new FileReader();
            reader.onload = function(e) {
                filePreview.src = e.target.result;
                filePreviewContainer.style.display = "block";
                cameraPreviewContainer.style.display = "none";
            };
            reader.readAsDataURL(file);
        } else {
            alert('Mohon upload file gambar (jpg, png, gif, etc.)');
            event.target.value = ''; // Reset input file
            filePreviewContainer.style.display = "none";
        }
    }
}

// Toggle input perwakilan
function togglePenerima() {
  if (penerimaLain.checked) {
    perwakilanInput.style.display = "block";
    namaPenerimaInput.setAttribute("required", "true");
  } else {
    perwakilanInput.style.display = "none";
    namaPenerimaInput.removeAttribute("required");
    namaPenerimaInput.value = "";
  }
}

penerimaKaryawan.addEventListener("change", togglePenerima);
penerimaLain.addEventListener("change", togglePenerima);
uploadFileOption.addEventListener("change", toggleBuktiPenyerahan);
gunakanKameraOption.addEventListener("change", toggleBuktiPenyerahan);

// Submit form handler
penyerahanForm.onsubmit = async function (event) {
    event.preventDefault();
    const formData = new FormData();
    const id = penyerahanForm.dataset.id;

    // Tambahkan data formulir dasar
    formData.append('namaKaryawan', document.getElementById('namaKaryawan').value);
    formData.append('unitKerja', document.getElementById('unitKerja').value);
    formData.append('namaAset', document.getElementById('namaAset').value);

    // Handle file upload dan camera capture
    if (gunakanKameraOption.checked && capturedBlob) {
        formData.append("gambar_bukti", capturedBlob, "capture.jpg");
    } else if (uploadFileOption.checked) {
        const fileInput = document.getElementById("gambarBukti");
        if (fileInput.files[0]) {
            formData.append("gambar_bukti", fileInput.files[0]);
        }
    }

    // Validasi gambar
    const hasImage = formData.has("gambar_bukti") || document.getElementById("gambarBukti").files.length > 0;
    if (!hasImage) {
        alert("Harap unggah bukti gambar melalui file atau gunakan kamera!");
        return;
    }

    // Tambahkan data penerima
    if (penerimaKaryawan.checked) {
        formData.append("nama_perwakilan", "");
        formData.append("isDiwakilkan", "false");
    } else {
        const namaPerwakilan = document.getElementById("namaPenerima").value;
        if (!namaPerwakilan) {
            alert("Harap isi nama perwakilan!");
            return;
        }
        formData.append("nama_perwakilan", namaPerwakilan);
        formData.append("isDiwakilkan", "true");
    }

    // Tampilkan loading
    document.getElementById("loading").style.display = "flex";

    try {
        const response = await fetch(`/penyerahanAset/${id}`, {
            method: "PATCH",
            body: formData
        });

        const result = await response.json();

        // Hide loading spinner before alerting
        document.getElementById("loading").style.display = "none";

        if (response.ok) {
            setTimeout(() => {
                alert(result.message);
                location.reload();
            }, 100); // Tambahkan sedikit delay agar UI lebih smooth
        } else {
            setTimeout(() => {
                alert(`Error: ${result.error}`);
            }, 100);
        }
    } catch (error) {
        console.error("Error occurred:", error);
        document.getElementById("loading").style.display = "none";
        setTimeout(() => {
            alert("Terjadi kesalahan saat mengirim data. Silakan coba lagi.");
        }, 100);
    } finally {
        modal.style.display = "none";
    }
};

// Show modal with filled information
function showModal(id, namaAset, namaKaryawan, unitKerja) {
    modal.style.display = "flex";

    // Set values to form inputs
    document.getElementById("namaKaryawan").value = namaKaryawan;
    document.getElementById("unitKerja").value = unitKerja;
    document.getElementById("namaAset").value = namaAset;
    penyerahanForm.dataset.id = id;

    // Default to upload file view when modal is opened
    uploadFileOption.checked = true;
    toggleBuktiPenyerahan();
}

// Fungsi reset form yang diperbaiki
function resetForm() {
    stopCamera();
    penyerahanForm.reset();
    filePreviewContainer.style.display = "none";
    cameraPreviewContainer.style.display = "none";
    capturedBlob = null;
    perwakilanInput.style.display = "none";
    
    // Reset file input
    const fileInput = document.getElementById("gambarBukti");
    if (fileInput) {
        fileInput.value = "";
    }
    
    uploadFileOption.checked = true;
    toggleBuktiPenyerahan();
}

// Modal event handlers
closeBtn.onclick = function() {
    resetForm();
    modal.style.display = "none";
};

cancelBtn.onclick = function() {
    resetForm();
    modal.style.display = "none";
};

window.onclick = function(event) {
    if (event.target === modal) {
        resetForm();
        modal.style.display = "none";
    }
};

  // Filter table rows based on search input
  function filterTable() {
    const input = document.getElementById("search-input").value.toLowerCase();
    const rows = document.querySelectorAll(".table-compact tbody tr");
    let hasMatch = false;

    rows.forEach(row => {
      const rowText = row.textContent.toLowerCase();
      if (rowText.includes(input)) {
        row.style.display = "";
        hasMatch = true;
      } else {
        row.style.display = "none";
      }
    });

    const noResultsMessage = document.getElementById("noResultsMessage");
    noResultsMessage.style.display = hasMatch ? "none" : "block";
  }
// Initialize when document loads
document.addEventListener('DOMContentLoaded', function() {
    // Initial setup
    resetForm();
    
    // Add search input event listener
    const searchInput = document.getElementById("search-input");
    if (searchInput) {
        searchInput.addEventListener("input", filterTable);
    }
});
</script>
